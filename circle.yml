dependencies:
  pre:
    - npm install -g firebase-tools
    - echo y | android update sdk --no-ui --all --filter tools,platform-tools,build-tools-25.0.2,android-25,extra-google-m2repository,extra-android-m2repository
    - mkdir "$ANDROID_HOME/licenses" || true
    - echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55" > "$ANDROID_HOME/licenses/android-sdk-license"
    - echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "$ANDROID_HOME/licenses/android-sdk-preview-license"

# Disable emulator audio
machine:
  java:
    version: oraclejdk8
  environment:
    QEMU_AUDIO_DRV: none
    ADB_INSTALL_TIMEOUT: "10"
    _JAVA_OPTIONS: "-Xms512m -Xmx1024m"
    GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"'

test:
  override:
    # assemble the sources
    - ./gradlew assemble -PdisablePreDex -Pkotlin.incremental=false
    # generate jacoco test report
    - ./gradlew jacocoTestReport -PdisablePreDex -Pkotlin.incremental=false
    # assemble androidTest sources
    #- ./gradlew :library:assembleAndroidTest :library-extras:assembleAndroidTest -PdisablePreDex -Pkotlin.incremental=false:
    #        timeout: 1200
    # start the emulator
    #- emulator -avd circleci-android24 -no-window:
    #        background: true
    #        parallel: true
    # wait for it to have booted
    #- circle-android wait-for-boot
    # unlock the emulator screen
    #- sleep 30
    #- adb shell input keyevent 82
    # run tests against the emulator.
    #- ./gradlew :library:connectedAndroidTest :library-extras:connectedAndroidTest -PdisablePreDex -Pkotlin.incremental=false:
    #        timeout: 1200
    # copy the test results to the test results directory.
    #- cp -r library/build/outputs/androidTest-results/* $CIRCLE_TEST_REPORTS
    #- cp -r library-extras/build/outputs/androidTest-results/* $CIRCLE_TEST_REPORTS
    # copy test reports
    #- cp -r library/build/reports/androidTests/* $CIRCLE_ARTIFACTS
    #- cp -r library-extras/build/reports/androidTests/* $CIRCLE_ARTIFACTS
    # upload codecov.io
    - bash <(curl -s https://codecov.io/bash)

deployment:
  production:
    tag: /[0-9]+(\.[0-9]+)*/
    owner: filipproch
    commands:
      # Generate KDoc and JavaDoc
      - ./gradlew dokka dokkaJavadoc
      # Upload KDoc and JavaDoc to Firebase
      - firebase deploy --token "$FIREBASE_TOKEN"
      # Upload library artifacts to Bintray
      - ./gradlew bintrayUpload